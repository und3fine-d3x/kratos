/*
 * Ory Kratos API
 *
 * Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests.
 *
 * API version: 1.0.0
 * Contact: hi@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kratos

import (
	"encoding/json"
)

// RegistrationFlowMethod struct for RegistrationFlowMethod
type RegistrationFlowMethod struct {
	Config RegistrationFlowMethodConfig `json:"config"`
	// and so on.
	Method string `json:"method"`
}

// NewRegistrationFlowMethod instantiates a new RegistrationFlowMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationFlowMethod(config RegistrationFlowMethodConfig, method string) *RegistrationFlowMethod {
	this := RegistrationFlowMethod{}
	this.Config = config
	this.Method = method
	return &this
}

// NewRegistrationFlowMethodWithDefaults instantiates a new RegistrationFlowMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationFlowMethodWithDefaults() *RegistrationFlowMethod {
	this := RegistrationFlowMethod{}
	return &this
}

// GetConfig returns the Config field value
func (o *RegistrationFlowMethod) GetConfig() RegistrationFlowMethodConfig {
	if o == nil {
		var ret RegistrationFlowMethodConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *RegistrationFlowMethod) GetConfigOk() (*RegistrationFlowMethodConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *RegistrationFlowMethod) SetConfig(v RegistrationFlowMethodConfig) {
	o.Config = v
}

// GetMethod returns the Method field value
func (o *RegistrationFlowMethod) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *RegistrationFlowMethod) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *RegistrationFlowMethod) SetMethod(v string) {
	o.Method = v
}

func (o RegistrationFlowMethod) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["config"] = o.Config
	}
	if true {
		toSerialize["method"] = o.Method
	}
	return json.Marshal(toSerialize)
}

type NullableRegistrationFlowMethod struct {
	value *RegistrationFlowMethod
	isSet bool
}

func (v NullableRegistrationFlowMethod) Get() *RegistrationFlowMethod {
	return v.value
}

func (v *NullableRegistrationFlowMethod) Set(val *RegistrationFlowMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationFlowMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationFlowMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationFlowMethod(val *RegistrationFlowMethod) *NullableRegistrationFlowMethod {
	return &NullableRegistrationFlowMethod{value: val, isSet: true}
}

func (v NullableRegistrationFlowMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationFlowMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
