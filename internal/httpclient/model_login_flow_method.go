/*
 * Ory Kratos API
 *
 * Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests.
 *
 * API version: 1.0.0
 * Contact: hi@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kratos

import (
	"encoding/json"
)

// LoginFlowMethod struct for LoginFlowMethod
type LoginFlowMethod struct {
	Config LoginFlowMethodConfig `json:"config"`
	// and so on.
	Method string `json:"method"`
}

// NewLoginFlowMethod instantiates a new LoginFlowMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginFlowMethod(config LoginFlowMethodConfig, method string) *LoginFlowMethod {
	this := LoginFlowMethod{}
	this.Config = config
	this.Method = method
	return &this
}

// NewLoginFlowMethodWithDefaults instantiates a new LoginFlowMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginFlowMethodWithDefaults() *LoginFlowMethod {
	this := LoginFlowMethod{}
	return &this
}

// GetConfig returns the Config field value
func (o *LoginFlowMethod) GetConfig() LoginFlowMethodConfig {
	if o == nil {
		var ret LoginFlowMethodConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *LoginFlowMethod) GetConfigOk() (*LoginFlowMethodConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *LoginFlowMethod) SetConfig(v LoginFlowMethodConfig) {
	o.Config = v
}

// GetMethod returns the Method field value
func (o *LoginFlowMethod) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *LoginFlowMethod) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *LoginFlowMethod) SetMethod(v string) {
	o.Method = v
}

func (o LoginFlowMethod) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["config"] = o.Config
	}
	if true {
		toSerialize["method"] = o.Method
	}
	return json.Marshal(toSerialize)
}

type NullableLoginFlowMethod struct {
	value *LoginFlowMethod
	isSet bool
}

func (v NullableLoginFlowMethod) Get() *LoginFlowMethod {
	return v.value
}

func (v *NullableLoginFlowMethod) Set(val *LoginFlowMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginFlowMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginFlowMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginFlowMethod(val *LoginFlowMethod) *NullableLoginFlowMethod {
	return &NullableLoginFlowMethod{value: val, isSet: true}
}

func (v NullableLoginFlowMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginFlowMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
