/*
 * Ory Kratos API
 *
 * Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests.
 *
 * API version: 1.0.0
 * Contact: hi@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kratos

import (
	"encoding/json"
	"fmt"
)

// SubmitSelfServiceRegistrationFlowPayload - struct for SubmitSelfServiceRegistrationFlowPayload
type SubmitSelfServiceRegistrationFlowPayload struct {
	SubmitSelfServiceRegistrationFlowWithPasswordMethod *SubmitSelfServiceRegistrationFlowWithPasswordMethod
}

// SubmitSelfServiceRegistrationFlowWithPasswordMethodAsSubmitSelfServiceRegistrationFlowPayload is a convenience function that returns SubmitSelfServiceRegistrationFlowWithPasswordMethod wrapped in SubmitSelfServiceRegistrationFlowPayload
func SubmitSelfServiceRegistrationFlowWithPasswordMethodAsSubmitSelfServiceRegistrationFlowPayload(v *SubmitSelfServiceRegistrationFlowWithPasswordMethod) SubmitSelfServiceRegistrationFlowPayload {
	return SubmitSelfServiceRegistrationFlowPayload{
		SubmitSelfServiceRegistrationFlowWithPasswordMethod: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *SubmitSelfServiceRegistrationFlowPayload) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SubmitSelfServiceRegistrationFlowWithPasswordMethod
	err = newStrictDecoder(data).Decode(&dst.SubmitSelfServiceRegistrationFlowWithPasswordMethod)
	if err == nil {
		jsonSubmitSelfServiceRegistrationFlowWithPasswordMethod, _ := json.Marshal(dst.SubmitSelfServiceRegistrationFlowWithPasswordMethod)
		if string(jsonSubmitSelfServiceRegistrationFlowWithPasswordMethod) == "{}" { // empty struct
			dst.SubmitSelfServiceRegistrationFlowWithPasswordMethod = nil
		} else {
			match++
		}
	} else {
		dst.SubmitSelfServiceRegistrationFlowWithPasswordMethod = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SubmitSelfServiceRegistrationFlowWithPasswordMethod = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(SubmitSelfServiceRegistrationFlowPayload)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(SubmitSelfServiceRegistrationFlowPayload)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SubmitSelfServiceRegistrationFlowPayload) MarshalJSON() ([]byte, error) {
	if src.SubmitSelfServiceRegistrationFlowWithPasswordMethod != nil {
		return json.Marshal(&src.SubmitSelfServiceRegistrationFlowWithPasswordMethod)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SubmitSelfServiceRegistrationFlowPayload) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.SubmitSelfServiceRegistrationFlowWithPasswordMethod != nil {
		return obj.SubmitSelfServiceRegistrationFlowWithPasswordMethod
	}

	// all schemas are nil
	return nil
}

type NullableSubmitSelfServiceRegistrationFlowPayload struct {
	value *SubmitSelfServiceRegistrationFlowPayload
	isSet bool
}

func (v NullableSubmitSelfServiceRegistrationFlowPayload) Get() *SubmitSelfServiceRegistrationFlowPayload {
	return v.value
}

func (v *NullableSubmitSelfServiceRegistrationFlowPayload) Set(val *SubmitSelfServiceRegistrationFlowPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitSelfServiceRegistrationFlowPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitSelfServiceRegistrationFlowPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitSelfServiceRegistrationFlowPayload(val *SubmitSelfServiceRegistrationFlowPayload) *NullableSubmitSelfServiceRegistrationFlowPayload {
	return &NullableSubmitSelfServiceRegistrationFlowPayload{value: val, isSet: true}
}

func (v NullableSubmitSelfServiceRegistrationFlowPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitSelfServiceRegistrationFlowPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
